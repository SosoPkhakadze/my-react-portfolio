File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\App.css
File Name: App.css
Code:
:root {
  --bg-color-light: #ffffff; /* White background */
  --text-color-light: #1a237e; /* Indigo dark blue text */
  --accent-color-light: #004aad; /* Royal blue accent */
  --orbit-color-light: #6a6acd; /* Light-blue/purplish orbit */
  --orbit-color-hover-light: #002171; /* Darker blue on hover */
  --toggle-bg-light: #f0f0f0; /* Light gray toggle background */
  --toggle-icon-light: #ffcc66; /* Yellow sun icon */
  --particle-color: #000052;

 --bg-color-dark: #000000; 
  --text-color-dark: #ffcc80; 
  --accent-color-dark: #ff9800; 
  --orbit-color-dark: #ffcc80; 
  --orbit-color-hover-dark: #e65100; 
  --toggle-bg-dark: #333333; 
  --toggle-icon-dark: #fbc02d;  

}
/* Global styles */
body {
  margin: 0;
  font-family: "Arial", sans-serif;
  transition: background-color 0.3s, color 0.3s;
  overflow: hidden; /* Hide vertical scrollbar on the body */
}

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
  overflow-y: scroll; /* Enable scrolling but hide scrollbar */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

html::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

/* Section styles */
section {
  padding: 4rem 2rem;
}

/* Welcome section */
.welcome-section {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--bg-color-light);
}

.dark-theme .welcome-section {
  background-color: var(--bg-color-dark);
}

/* Experience section */
.experience-section {
  background-color: var(--bg-color-light);
}

.dark-theme .experience-section {
  background-color: var(--bg-color-dark);
}

/* Projects section */
.projects-section {
  background-color: var(--bg-color-light);
}

.dark-theme .projects-section {
  background-color: var(--bg-color-dark);
}

/* Skills section */
.skills-section {
  background-color: var(--bg-color-light);
}

.dark-theme .skills-section {
  background-color: var(--bg-color-dark);
}

/* Education section */
.education-section {
  background-color: var(--bg-color-light);
}

.dark-theme .education-section {
  background-color: var(--bg-color-dark);
}

/* Contact section */
.contact-section {
  background-color: var(--bg-color-light);
}

.dark-theme .contact-section {
  background-color: var(--bg-color-dark);
}

/* Other dark theme styles... */
.dark-theme {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.dark-theme::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

.dark-theme .bg-initials {
  filter: drop-shadow(0 0 2px white);
}

section {
  padding: 4rem 2rem;
}

/* Section Title Styles (applied to all sections) */
.section-title {
  font-size: 2.5rem; /* Adjust as needed */
  font-weight: bold;
  text-align: center;
  margin-bottom: 5rem; /* Adjust as needed */
  color: var(--accent-color-light); /* Use accent color for title */
}

.dark-theme .section-title {
  color: var(--accent-color-dark);
}

--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\App.jsx
File Name: App.jsx
Code:
import React, { useState, useEffect } from 'react';
import Header from './components/Header/Header';
import Welcome from './components/Welcome/Welcome';
import Experience from './components/Experience/Experience';
import Projects from './components/Projects/Projects';
import Skills from './components/Skills/Skills';
import Education from './components/Education/Education';
import Contact from './components/Contact/Contact';
import CursorTrail from './components/CursorTrail/CursorTrail';
import Particles from './components/Particles/Particles';
import './App.css';

function App() {
  const [isDarkMode, setIsDarkMode] = useState(false);

  useEffect(() => {
    const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
    setIsDarkMode(prefersDarkScheme.matches);
  }, []);

  const toggleTheme = () => {
    setIsDarkMode(!isDarkMode);
  };

  useEffect(() => {
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const element = document.querySelector(this.getAttribute('href'));
        if (element) {
          element.scrollIntoView({
            behavior: 'smooth'
          });
        }
      });
    });
  }, []);

  return (
    <div className={`App ${isDarkMode ? 'dark-theme' : ''}`}>
      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />
      <Welcome />
      <Experience />
      <Projects isDarkMode={isDarkMode} />
      <Skills />
      <Education />
      <Contact />
      <CursorTrail isDarkMode={isDarkMode} />
      <Particles isDarkMode={isDarkMode} />
    </div>
  );
}

export default App;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\main.jsx
File Name: main.jsx
Code:
import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';


const root = createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
      <App />
  </React.StrictMode>
);
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\assets\github-mark-white.png
File Name: github-mark-white.png
Skipping binary or non-UTF-8 file.
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\assets\github-mark.png
File Name: github-mark.png
Skipping binary or non-UTF-8 file.
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\assets\project1-1.jpg
File Name: project1-1.jpg
Code:

--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Contact\Contact.css
File Name: Contact.css
Code:
.contact-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .contact-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 600px;
  margin: 2rem auto;
}

.contact-form input,
.contact-form textarea {
  padding: 0.8rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 5px;
  font-size: 1rem;
  transition: border-color 0.3s;
}

.contact-form input:focus,
.contact-form textarea:focus {
  border-color: var(--accent-color-light);
  outline: none;
}

.contact-form button {
  padding: 0.8rem;
  background-color: var(--accent-color-light);
  border: none;
  border-radius: 5px;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

.contact-form button:hover {
  background-color: var(--orbit-color-hover-light);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Contact\Contact.jsx
File Name: Contact.jsx
Code:
import React from 'react';
import './Contact.css';

const Contact = () => {
  return (
    <section id="contact" className="contact-section">
      <h2>Contact</h2>
      <form className="contact-form">
        <input type="text" placeholder="Your Name" required />
        <input type="email" placeholder="Your Email" required />
        <textarea placeholder="Your Message" required></textarea>
        <button type="submit">Send Message</button>
      </form>
    </section>
  );
};

export default Contact;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\CursorTrail\CursorTrail.css
File Name: CursorTrail.css
Code:
.cursor-trail {
  position: fixed;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: var(--accent-color-light);
  pointer-events: none;
  mix-blend-mode: difference;
  z-index: 10000;
  transition: transform 0.03s ease-out, opacity 0.2s ease-in;
}

.dark-theme .cursor-trail {
  background-color: var(--accent-color-dark);
}

/* Splattering Particles */
.cursor-particle {
  position: fixed;
  width: 3px;
  height: 3px;
  border-radius: 50%;
  background: var(--accent-color-light);
  pointer-events: none;
  z-index: 9999;
  opacity: 1;
  transition: transform 0.4s ease-out, opacity 0.4s ease-in;
}

.dark-theme .cursor-particle {
  background: var(--accent-color-dark);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\CursorTrail\CursorTrail.jsx
File Name: CursorTrail.jsx
Code:
import React, { useState, useEffect, useRef } from 'react';
import './CursorTrail.css';

const CursorTrail = ({ isDarkMode }) => {
  const [trail, setTrail] = useState([]);
  const trailLength = 15;
  const lastPos = useRef({ x: 0, y: 0 });

  useEffect(() => {
    const handleMouseMove = (event) => {
      const { clientX, clientY } = event;
      lastPos.current = { x: clientX, y: clientY };

      // Update trail positions with delay
      cursorTrail.forEach((dot, index) => {
        setTimeout(() => {
          dot.style.left = clientX + 'px';
          dot.style.top = clientY + 'px';
          dot.style.opacity = index / trailLength;
          dot.style.transform = `scale(${index / trailLength})`;
        }, index * 15);
      });

      // Create splashing particles
      for (let i = 0; i < 5; i++) {
        createSplatterParticle(clientX, clientY);
      }
    };

    const createTrailElements = () => {
      const newTrail = [];
      for (let i = 0; i < trailLength; i++) {
        const dot = document.createElement('div');
        dot.classList.add('cursor-trail');
        updateElementColor(dot); // Update color on creation
        document.body.appendChild(dot);
        newTrail.push(dot);
      }
      setTrail(newTrail);
      return newTrail;
    };

    const createSplatterParticle = (x, y) => {
      const particle = document.createElement('div');
      particle.classList.add('cursor-particle');
      updateElementColor(particle); // Update color on creation
      document.body.appendChild(particle);

      const size = Math.random() * 3 + 2;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;

      const dx = x - lastPos.current.x;
      const dy = y - lastPos.current.y;
      const angle = Math.random() * Math.PI * 2;
      const speed = Math.random() * 15 + 5;
      const velocityX = Math.cos(angle) * speed + dx * 0.4;
      const velocityY = Math.sin(angle) * speed + dy * 0.4;

      particle.style.left = `${x}px`;
      particle.style.top = `${y}px`;

      setTimeout(() => {
        particle.style.transform = `translate(${velocityX}px, ${velocityY}px) scale(0)`;
        particle.style.opacity = '0';
      }, Math.random() * 200 + 100);

      setTimeout(() => particle.remove(), 600);
    };

    // Helper function to update element color based on theme
    const updateElementColor = (element) => {
      if (isDarkMode) {
        element.style.background = 'var(--accent-color-dark)';
      } else {
        element.style.background = 'var(--accent-color-light)';
      }
    };

    const cursorTrail = createTrailElements();

    document.addEventListener('mousemove', handleMouseMove);

    return () => {
      document.removeEventListener('mousemove', handleMouseMove);
      cursorTrail.forEach((dot) => dot.remove());
    };
  }, [isDarkMode]); // Add isDarkMode as a dependency

  return null; // No need to render anything, as elements are added to the DOM directly
};

export default CursorTrail;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Education\Education.css
File Name: Education.css
Code:
.education-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .education-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.education-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.education-card {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.education-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Education\Education.jsx
File Name: Education.jsx
Code:
import React from 'react';
import './Education.css';

const Education = () => {
  return (
    <section id="education" className="education-section">
      <h2>Education</h2>
      <div className="education-grid">
        <div className="education-card">
          <h3>Degree 1</h3>
          <p>Description of Degree 1.</p>
        </div>
        <div className="education-card">
          <h3>Degree 2</h3>
          <p>Description of Degree 2.</p>
        </div>
      </div>
    </section>
  );
};

export default Education;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Experience\Experience.css
File Name: Experience.css
Code:
/* Experience Section */
.experience-section {
  padding: 6rem 2rem; /* Increased padding */
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .experience-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.section-title {
  font-size: 2.5rem; /* Slightly larger title */
  font-weight: bold;
  text-align: center;
  margin-bottom: 5rem; /* Increased margin */
  color: var(--accent-color-light);
}

.dark-theme .section-title {
  color: var(--accent-color-dark);
}

/* Experience Container */
.experience-container {
  display: flex;
  gap: 3rem; /* Increased gap */
  align-items: flex-start;
  max-width: 1200px; /* Limit container width for better readability */
  margin: 0 auto; /* Center the container */
}

/* Left Side: Experience Info Card */
.experience-info-card {
  flex: 1.5; /* Adjusted flex for better balance */
  border-radius: 16px; /* More rounded corners */
  background: rgba(0, 74, 173, 0.2); /* More transparency */
  backdrop-filter: blur(10px); /* Glassmorphism blur */
  -webkit-backdrop-filter: blur(10px); /* Safari support */
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); /* More pronounced shadow */
  border: 1px solid rgba(255, 255, 255, 0.18); /* Subtle border */
  position: relative;
  padding: 2.5rem; /* Consistent padding */
}

.dark-theme .experience-info-card {
  background: rgba(255, 152, 0, 0.2);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.experience-info {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content vertically */
  height: 100%;
}

.experience-info h3 {
  font-size: 1.7rem; /* Larger title */
  margin-bottom: 0.5rem;
  color: var(--text-color-light);
  font-weight: 600; /* Bolder title */
}

.dark-theme .experience-info h3 {
  color: var(--text-color-dark);
}

.experience-info h4 {
  font-size: 1.3rem; /* Slightly larger company name */
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--accent-color-light);
}

.dark-theme .experience-info h4 {
  color: var(--accent-color-dark);
}

.experience-info h5 {
  font-size: 1rem;
  color: var(--orbit-color-light);
  margin-bottom: 1.5rem; /* Increased margin */
}

.dark-theme .experience-info h5 {
  color: var(--orbit-color-dark);
}

.experience-info ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  text-align: left; /* Align list to the left */
  width: 100%; /* Make list take full width */
}

.experience-info li {
  margin-bottom: 0.8rem; /* Increased margin */
  line-height: 1.7; /* Adjusted line height */
}

/* Company Logo Holder (Main) */
.company-logo-main {
  width: 100px; /* Larger logo */
  height: 100px; /* Larger logo */
  border-radius: 50%;
  background: var(--bg-color-light);
  border: 3px solid var(--accent-color-light);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4), /* Outer shadow */ 
              inset 0 0 5px rgba(0, 0, 0, 0.2); /* Inner shadow */
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: -50px; /* Adjust based on new logo size */
  left: 50%;
  transform: translateX(-50%);
  overflow: hidden;
  z-index: 2;
}

.dark-theme .company-logo-main {
  background: var(--bg-color-dark);
  border-color: var(--accent-color-dark);
}

.company-logo-main img {
  width: 75%; /* Adjusted image size */
  height: 75%; /* Adjusted image size */
  object-fit: contain;
  border-radius: 50%;
}

/* Right Side: Company Logos and Position Names in a Card */
.company-logos-card {
  width: 320px; /* Slightly wider */
  padding: 1rem; /* Consistent padding */
  border-radius: 16px; /* More rounded corners */
  background: rgba(0, 74, 173, 0.2);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  border: 1px solid rgba(255, 255, 255, 0.18);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow: hidden;
}

.dark-theme .company-logos-card {
  background: rgba(255, 152, 0, 0.2);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37); /* Shadow for dark mode */
}

.company-logo-wrapper {
  display: flex;
  align-items: center;
  gap: 1.2rem; /* Increased gap */
  cursor: pointer;
  padding: 1rem; /* Increased padding */
  border-radius: 10px; /* More rounded corners */
  transition: all 0.3s ease; /* For hover effect */
}

/* Hover and active states for logos on the right */
.company-logo-wrapper:hover {
  background-color: var(--orbit-color-hover-light);
}

.company-logo-wrapper.active {
  background-color: var(--accent-color-light);
}

.dark-theme .company-logo-wrapper:hover {
  background-color: var(--orbit-color-hover-dark);
}

.dark-theme .company-logo-wrapper.active {
  background-color: var(--accent-color-dark);
}

.company-logo-wrapper:hover .company-title,
.company-logo-wrapper.active .company-title {
  color: var(--bg-color-light);
}

.dark-theme .company-logo-wrapper:hover .company-title,
.dark-theme .company-logo-wrapper.active .company-title {
  color: var(--bg-color-dark);
}

.company-logo {
  width: 55px; /* Slightly larger */
  height: 55px; /* Slightly larger */
  border-radius: 50%;
  overflow: hidden;
  flex-shrink: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); /* More pronounced shadow */
}

.company-logo img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.company-title {
  font-size: 1rem; /* Slightly larger */
  font-weight: 500;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: var(--accent-color-light);
}

.dark-theme .company-title {
  color: var(--accent-color-dark);
}

/* Traveling Logo */
.traveling-logo {
  position: absolute;
  border-radius: 50%;
  z-index: 10;
  pointer-events: none;
}

/* Responsive Design */
@media (max-width: 768px) {
  .experience-container {
    flex-direction: column-reverse;
    align-items: center;
  }

  .company-logos-card {
    width: 100%; /* Take full width on small screens */
  }

  .experience-info-card {
    padding: 2rem; /* Adjust padding for smaller screens */
  }

  .company-logo-main {
    width: 80px;
    height: 80px;
    top: -40px;
  }

  .company-logo-main img {
    width: 70%;
    height: 70%;
  }

  .experience-info h3 {
    font-size: 1.5rem;
  }

  .experience-info h4 {
    font-size: 1.2rem;
  }
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Experience\Experience.jsx
File Name: Experience.jsx
Code:
import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import './Experience.css';

import {useAnimationControls } from 'framer-motion';

  const Experience = () => {
    const controls = useAnimationControls(); // Initialize animation controls

  const [activeCompanyId, setActiveCompanyId] = useState('netex');
  const [logoAnimation, setLogoAnimation] = useState(null);

  const experienceData = [
    {
      id: 'netex',
      logo: 'netex.png',
      alt: 'Netex Consulting LLC',
      title: 'Data Engineer & AI Training Support Specialist',
      duration: 'Apr 2022 - Aug 2023',
      description: [
        'Led data preparation for a large-scale AI training initiative, annotating over 300,000 thermal and standard images.',
        'Enhanced object detection algorithms for livestock monitoring.',
        'Optimized environmental data reporting and resource allocation.',
        'Collaborated with a distributed team, ensuring 99% data annotation accuracy.',
      ],
    },
    {
      id: 'devsdata',
      logo: 'devsdata.png',
      alt: 'DevsData',
      title: 'QA Engineer',
      duration: 'Jul 2024 - Present',
      description: [
        'Conducted in-depth QA for backend functionalities across Python and JavaScript applications.',
        'Identified issues early to ensure 100% reliable deployment.',
        'Reduced manual testing time by 80% through automated test scripts.',
        'Ensured frontend deployment integrity and grammatical accuracy in published articles.',
      ],
    },
  ];

  const activeCompany = experienceData.find((company) => company.id === activeCompanyId);

    // Update handleCompanyClick to include return animation
  const handleCompanyClick = (companyId) => {
    // Get coordinates relative to the viewport
    const fromCoords = document.getElementById(`logo-${companyId}`).getBoundingClientRect();
    const toCoords = document.querySelector('.company-logo-main').getBoundingClientRect();

    // Animation for moving the logo to the active slot
    setLogoAnimation({
      id: companyId,
      from: fromCoords,
      to: toCoords,
      isReturning: false,
    });

    // Animate the move up to the active slot
    controls.start({
      x: toCoords.x - fromCoords.x,
      y: toCoords.y - fromCoords.y,
      width: toCoords.width,
      height: toCoords.height,
      transition: { duration: 0.3, ease: "easeInOut" },
    }).then(() => {
      // Once the logo has moved up, switch the active company id
      setActiveCompanyId(companyId);

      // Get coordinates for the return trip
      const returnFromCoords = document.querySelector('.company-logo-main').getBoundingClientRect();
      const returnToCoords = document.getElementById(`logo-${companyId}`).getBoundingClientRect();

      // Reset position to start from the top
      controls.set({
        x: 0,
        y: 0,
        width: returnFromCoords.width,
        height: returnFromCoords.height,
      });

      // Animation for moving the logo back to its original slot
      setLogoAnimation({
        id: companyId,
        from: returnFromCoords,
        to: returnToCoords,
        isReturning: true,
      });

      // Animate the return to the original position
      controls.start({
        x: returnToCoords.x - returnFromCoords.x,
        y: returnToCoords.y - returnFromCoords.y,
        width: returnToCoords.width,
        height: returnToCoords.height,
        transition: { duration: 0.3, ease: "easeInOut" },
      }).then(() => {
        // After the animation completes, reset the animation state
        setLogoAnimation(null);
      });
    });
  };

  return (
    <section className="experience-section" aria-labelledby="experience-heading">
      <h2 id="experience" className="section-title">
        Professional Experience
      </h2>
      <div className="experience-container">
        {/* Left Side: Experience Info Card with Logo Holder */}
        <motion.div
          className="experience-info-card"
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5 }}
        >
          <div className="company-logo-main">
            <AnimatePresence initial={false}>
              <motion.img
                key={activeCompanyId}
                src={activeCompany.logo}
                alt={activeCompany.alt}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                transition={{ duration: 0.2 }}
              />
            </AnimatePresence>
          </div>

          <div className="experience-info">
            <h3>{activeCompany.title}</h3>
            <h4>{activeCompany.alt}</h4>
            <h5>{activeCompany.duration}</h5>
            <ul>
              {activeCompany.description.map((point, index) => (
                <li key={index}>{point}</li>
              ))}
            </ul>
          </div>
        </motion.div>

        {/* Right Side: Company Logos and Position Names in a Card */}
        <div className="company-logos-card">
          {experienceData.map((company) => (
            <motion.div
              key={company.id}
              className={`company-logo-wrapper ${activeCompanyId === company.id ? 'active' : ''
                }`}
              onClick={() => handleCompanyClick(company.id)}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <div className="company-logo" id={`logo-${company.id}`}>
                <AnimatePresence>
                  {/* Render the company logo if not actively animating or if it's the one returning */}
                  {(logoAnimation === null || (logoAnimation.id !== company.id || logoAnimation.isReturning)) && (
                    <motion.img
                      key={company.id}
                      src={company.logo}
                      alt={company.alt}
                      initial={{ opacity: 1 }}
                      exit={{ opacity: 0 }}
                      transition={{ duration: 0.2 }}
                    />
                  )}
                </AnimatePresence>
              </div>
              <div className="company-title">{company.title}</div>
            </motion.div>
          ))}

          {/* Logo Animation */}
          {logoAnimation && (
            <motion.img
              className="traveling-logo"
              src={experienceData.find((c) => c.id === logoAnimation.id).logo}
              alt={experienceData.find((c) => c.id === logoAnimation.id).alt}
              initial={{
                x: logoAnimation.from.x,
                y: logoAnimation.from.y,
                width: logoAnimation.from.width,
                height: logoAnimation.from.height,
              }}
              animate={controls} // Use animation controls for the animation
              transition={{ duration: 0.3 }}
            />
          )}
        </div>
      </div>
    </section>
  );
};

export default Experience;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Header\Header.css
File Name: Header.css
Code:
/* Base Header Styles */
.header {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 1000;
  padding: 1rem 2rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}
.dark-theme .header {
  background-color: rgba(26, 26, 26, 0.9);
}

.nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo-container {
  display: flex;
  align-items: center;
  z-index: 1001;
}

.logo {
  height: 40px;
  margin-right: 1rem;
  filter: drop-shadow(0 0 5px var(--text-color-light));
}
.dark-theme .logo {
  filter: drop-shadow(0 0 2px var(--text-color-dark));
}

.nav-list {
  list-style: none;
  display: flex;
  margin: 0;
  padding: 0;
  flex-grow: 1; /* Allow nav-list to grow */
  justify-content: center; /* Center the nav items */
}

.nav-list li {
  position: relative;
  margin: 0 2rem;
}

.nav-list li a {
  text-decoration: none;
  position: relative;
  display: block;
  overflow: hidden;
  font-weight: 600;
  padding: 0.5rem 1rem;
  color: var(--text-color-light);
  transition: all 0.3s ease-in-out;
  border-radius: 5px;
}
.dark-theme .nav-list li a {
  color: var(--text-color-dark);
}

/* Hover Effect Light Mode */
.nav-list li a::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 0, 0, 0.1),
    var(--accent-color-light),
    rgba(0, 0, 0, 0.1),
    transparent
  );
  transform: skewX(-25deg);
  transition: left 0.5s ease;
  z-index: -1;
}

/* Hover Effect Dark Mode */
.dark-theme .nav-list li a::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    var(--accent-color-dark),
    rgba(255, 255, 255, 0.2),
    transparent
  );
}

.nav-list li a:hover::before {
  left: 100%;
}

.nav-list li a:hover {
  transform: scale(1.1); /* Slightly enlarge the link */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Add a subtle glow */
}
.dark-theme .nav-list li a:hover {
  box-shadow: 0 0 10px var(--accent-color-dark); /* Adjust glow for dark theme */
}

/* Active State Styles */
.nav-list li.active a {
  color: var(--accent-color-light);
  border: none;
}
.dark-theme .nav-list li.active a {
  color: var(--accent-color-dark);
}

/* Hamburger Menu */
#hamburger-btn {
  display: none;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  z-index: 1001;
}

.bar {
  display: block;
  width: 25px;
  height: 3px;
  margin: 5px auto;
  background-color: var(--text-color-light);
  transition: 0.3s;
}
.dark-theme .bar {
  background-color: var(--text-color-dark);
}

#hamburger-btn.active .bar:nth-child(2) {
  opacity: 0;
}

#hamburger-btn.active .bar:nth-child(1) {
  transform: translateY(8px) rotate(45deg);
}

#hamburger-btn.active .bar:nth-child(3) {
  transform: translateY(-8px) rotate(-45deg);
}

/* Theme Toggle Button */
#theme-toggle {
  position: relative; /* Keep relative positioning */
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: transparent;
  border: 2px solid var(--accent-color-light);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
  margin-right: 50px; /* Add some margin from the right edge */
}

.dark-theme #theme-toggle {
  border-color: var(--accent-color-dark);
}

#theme-toggle:hover {
  transform: rotate(45deg);
}

.toggle-icon {
  font-size: 28px;
  color: var(--accent-color-light);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.dark-theme .toggle-icon {
  color: var(--accent-color-dark);
}

.sun-icon {
  position: absolute;
  opacity: 1;
}

.dark-theme .sun-icon {
  opacity: 0;
  transform: translateY(-20px);
}

.moon-icon {
  position: absolute;
  opacity: 0;
  transform: translateY(20px);
}

.dark-theme .moon-icon {
  opacity: 1;
  transform: translateY(0);
}

/* Media Query for Mobile Responsiveness */
@media (max-width: 768px) {
  .nav {
    justify-content: space-between;
  }

  #hamburger-btn {
    display: block;
  }

  .nav-list {
    display: none;
    flex-direction: column;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
    z-index: 1000;
    gap: 2rem;
  }

  .dark-theme .nav-list {
    background-color: rgba(26, 26, 26, 0.95);
  }

  .nav-list.active {
    display: flex;
  }

  .nav-list li {
    width: 100%;
  }

  .nav-list a {
    padding: 1rem;
    text-align: center;
    display: block;
  }

  .theme-toggle {
    position: relative;
    top: 0;
    right: 0;
    margin-right: 10px;
  }

  
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Header\Header.jsx
File Name: Header.jsx
Code:
import React, { useState, useEffect, useRef } from "react";
import "./Header.css";

const Header = ({ isDarkMode, toggleTheme }) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [activeSection, setActiveSection] = useState("home");
  const headerRef = useRef(null);

  // Toggle mobile menu
  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  // Handle scroll to detect active section
  useEffect(() => {
    const handleScroll = () => {
      const sections = [
        "home",
        "experience",
        "projects",
        "skills",
        "education",
        "contact",
      ];
      const currentSection = sections.find((section) => {
        const element = document.getElementById(section);
        if (element) {
          const rect = element.getBoundingClientRect();
          return (
            rect.top <= window.innerHeight / 2 &&
            rect.bottom >= window.innerHeight / 2
          );
        }
        return false;
      });
      setActiveSection(currentSection || "home");
    };

    // Intersection Observer for smooth active link updates
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const link = headerRef.current.querySelector(
            `a[href="#${entry.target.id}"]`
          );
          if (link) {
            if (entry.isIntersecting) {
              // Remove active class from all links
              headerRef.current
                .querySelectorAll(".nav-list li")
                .forEach((li) => li.classList.remove("active"));
              // Add active class to the current link
              link.closest("li").classList.add("active");
            }
          }
        });
      },
      {
        threshold: 0.5,
      }
    );

    const sections = document.querySelectorAll("section");
    sections.forEach((section) => observer.observe(section));

    window.addEventListener("scroll", handleScroll);

    return () => {
      window.removeEventListener("scroll", handleScroll);
      sections.forEach((section) => observer.unobserve(section));
    };
  }, []);

  return (
    <header className={`header ${isDarkMode ? "dark-theme" : ""}`} ref={headerRef}>
      <div className="nav">
        {/* Logo Container */}
        <div className="logo-container">
          <img
            src={`${import.meta.env.BASE_URL}SP.png`}
            alt="Logo"
            className="logo"
          />
        </div>

        {/* Navigation List */}
        <nav>
          <button
            id="hamburger-btn"
            onClick={toggleMenu}
            className={isMenuOpen ? "active" : ""}
          >
            <span className="bar"></span>
            <span className="bar"></span>
            <span className="bar"></span>
          </button>
          <ul className={`nav-list ${isMenuOpen ? "active" : ""}`}>
            {[
              "Home",
              "Experience",
              "Projects",
              "Skills",
              "Education",
              "Contact",
            ].map((item) => {
              const sectionId =
                item.toLowerCase() === "home" ? "welcome" : item.toLowerCase();
              return (
                <li
                  key={item}
                  className={activeSection === sectionId ? "active" : ""}
                >
                  <a href={`#${sectionId}`}>{item}</a>
                </li>
              );
            })}
          </ul>
        </nav>

        {/* Theme Toggle Button */}
        <button id="theme-toggle" onClick={toggleTheme}>
          <i className={`toggle-icon sun-icon bx bxs-sun`}></i>
          <i className={`toggle-icon moon-icon bx bxs-moon`}></i>
        </button>
      </div>
    </header>
  );
};

export default Header;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Particles\Particles.css
File Name: Particles.css
Code:
.particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0; /* Correct z-index */
  }
  .particle {
    position: absolute;
    border-radius: 50%;
    background-color: var(--particle-color); 
    opacity: 1; 
    animation: floatParticle 6s ease-in-out infinite; 
    
  }
  
  /* Dark Mode Styling */
  .dark-theme .particle,
  .particle.dark-theme {
    background-color: #ffcc80; /* Non-transparent light yellow for dark mode */
    
  }
  
  /* Floating Animation */
  @keyframes floatParticle {
    0% {
      transform: translateY(0) translateX(0); /* Start at original position */
    }
    25% {
      transform: translateY(-5px) translateX(5px); /* Move slightly up and right */
    }
    50% {
      transform: translateY(0) translateX(0); /* Back to origin */
    }
    75% {
      transform: translateY(5px) translateX(-5px); /* Move slightly down and left */
    }
    100% {
      transform: translateY(0) translateX(0); /* End at original position */
    }
  }
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Particles\Particles.jsx
File Name: Particles.jsx
Code:
import React, { useEffect, useRef } from 'react';
import './Particles.css';

const Particles = ({ isDarkMode }) => {
  const particlesRef = useRef([]);

  useEffect(() => {
    const numParticles = 400;
    // Create a container for the particles and attach it to the body
    const particlesContainer = document.createElement('div');
    particlesContainer.classList.add('particles-container'); // Add the new class to the container
    document.body.appendChild(particlesContainer);

    const newParticles = [];
    for (let i = 0; i < numParticles; i++) {
      const particle = document.createElement('div');
      particle.classList.add('particle');
      // Apply dark-theme class directly if dark mode is enabled
      if (isDarkMode) {
        particle.classList.add('dark-theme');
      }

      // Randomize position, size, and animation delay
      const x = Math.random() * 100;
      const y = Math.random() * 100;
      const size = Math.random() * 2 + 1;
      const delay = Math.random() * 5; // Changed delay for the floating effect

      particle.style.left = `${x}vw`;
      particle.style.top = `${y}vh`;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.animationDelay = `${delay}s`;

      particlesContainer.appendChild(particle);
      newParticles.push(particle);
    }

    particlesRef.current = newParticles;

    // Cleanup function to remove particles and container when the component unmounts
    return () => {
      particlesRef.current.forEach((particle) => particle.remove());
      particlesContainer.remove();
    };
  }, [isDarkMode]);

  return null;
};

export default Particles;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\ProjectModal.css
File Name: ProjectModal.css
Code:
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10; /* Ensure it's above other content */
  }
  
  .modal-content {
    background-color: var(--bg-color-light);
    color: var(--text-color-light);
    padding: 2rem;
    border-radius: 12px; /* More rounded corners */
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2); /* Softer shadow */
    max-width: 70%; /* Adjust as needed */
    max-height: 80%;
    overflow-y: auto;
    position: relative;
    text-align: center; /* Center align modal content */
  }
  
  .dark-theme .modal-content {
    background-color: var(--bg-color-dark);
    color: var(--text-color-dark);
  }
  
  .modal-title {
    font-size: 1.8rem;
    margin-bottom: 1rem;
    color: var(--accent-color-light);
  }
  
  .dark-theme .modal-title {
    color: var(--accent-color-dark);
  }
  
  .modal-image {
    width: 100%;
    margin: 0 auto 20px;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .modal-image img {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .modal-description {
    margin-bottom: 2rem; /* Space before the buttons */
    font-size: 1rem;
  }
  
  .close-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-color-light);
    z-index: 11;
  }
  
  .dark-theme .close-button {
    color: var(--text-color-dark);
  }
  
  .modal-buttons {
    /* Add this container for buttons */
    margin-top: 1rem;
  }
  
  .modal-button {
    background-color: var(--accent-color-light);
    color: var(--text-color-dark);
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    margin: 0 0.5rem; /* Space between buttons */
    transition: background-color 0.3s ease;
  }
  
  .dark-theme .modal-button {
    background-color: var(--accent-color-dark);
    color: var(--text-color-light);
  }
  
  .modal-button:hover {
    background-color: var(--orbit-color-hover-light);
  }
  
  .dark-theme .modal-button:hover {
    background-color: var(--orbit-color-hover-dark);
  }
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\ProjectModal.jsx
File Name: ProjectModal.jsx
Code:
import React from "react";
import "./ProjectModal.css";
import project1Image from "../assets/project1-1.jpg";
const ProjectModal = ({ project, onClose }) => {
    return (
        <div className="modal-overlay" onClick={onClose}>
            <div
                className="modal-content"
                onClick={(e) => e.stopPropagation()}
            >
                <button className="close-button" onClick={onClose}>
                    X
                </button>
                <h2 className="modal-title">{project.title}</h2>

                {project.id === "k-line-data-analysis" && (
                    <div className="modal-image">
                        <img
                            src={project1Image}
                            alt={`${project.title}`}
                        />
                    </div>
                )}
                <p className="modal-description">{project.description}</p>

                <div className="modal-buttons">
                    {" "}
                    {/* Container for buttons */}
                    {project.githubLink && (
                        <a
                            href={project.githubLink}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="modal-button"
                        >
                            GitHub
                        </a>
                    )}
                    {/* Add more buttons here if you have live links, etc. */}
                </div>
            </div>
        </div>
    );
};

export default ProjectModal;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\Projects.css
File Name: Projects.css
Code:
/* Projects Section */
.projects-section {
  padding: 6rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
  background-image: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.1) 0%,
    rgba(0, 74, 173, 0.1) 100%
  );
}

.dark-theme .projects-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
  background-image: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.5) 0%,
    rgba(255, 152, 0, 0.2) 100%
  );
}

/* Filter Container */
.filter-container {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
}

.filter-dropdown {
  position: relative;
}

.filter-btn {
  background-color: var(--accent-color-light);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.dark-theme .filter-btn {
  background-color: var(--accent-color-dark);
}

.filter-btn:hover {
  background-color: var(--orbit-color-hover-light);
}

.dark-theme .filter-btn:hover {
  background-color: var(--orbit-color-hover-dark);
}

.filter-icon {
  width: 1rem;
  height: 1rem;
  fill: white;
}

.filter-dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
  border-radius: 5px;
}

.filter-dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  cursor: pointer;
}

.filter-dropdown-content a:hover {
  background-color: #f1f1f1;
}

.filter-dropdown:hover .filter-dropdown-content {
  display: block;
}

/* Projects Grid */
.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin-bottom: 3rem;
}
/* Project Card */
.project-card {
  min-width: 300px;
  flex-shrink: 0;
  background: rgba(255, 255, 255, 0.25);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  padding: 2rem;
  position: relative;
  display: flex;
  flex-direction: column;
  transition: transform 0.4s ease-in-out, opacity 0.4s ease-in-out;
  opacity: 1;
}

.dark-theme .project-card {
  background: rgba(0, 0, 0, 0.25);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.project-title {
  font-size: 1.4rem;
  margin-bottom: 0.5rem;
  color: var(--accent-color-light);
}

.dark-theme .project-title {
  color: var(--accent-color-dark);
}

.project-short-description {
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.project-technologies {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.tech {
  background-color: var(--orbit-color-light);
  color: #fff;
  padding: 0.3rem 0.6rem;
  border-radius: 5px;
  font-size: 0.8rem;
}

.dark-theme .tech {
  background-color: var(--orbit-color-dark);
}

/* GitHub Link */
.github-link {
  position: absolute;
  top: 1rem;
  right: 1rem;
  display: flex;
  padding: 0.3rem;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.2);
  z-index: 2;
  cursor: pointer;
}

.dark-theme .github-link {
  background-color: rgba(255, 255, 255, 0.2);
}

.github-logo {
  width: 25px;
  height: 25px;
}

/* View Button */
.view-button {
  background-color: var(--accent-color-light);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: auto;
  align-self: flex-start;
}

.dark-theme .view-button {
  background-color: var(--accent-color-dark);
}

.view-button:hover {
  background-color: var(--orbit-color-hover-light);
}

.dark-theme .view-button:hover {
  background-color: var(--orbit-color-hover-dark);
}



/* Project Modal */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
}

.modal-content {
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  max-width: 80%;
  max-height: 80%;
  overflow-y: auto;
  position: relative;
}

.dark-theme .modal-content {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.modal-title {
  font-size: 1.6rem;
  margin-bottom: 1rem;
  color: var(--accent-color-light);
}

.dark-theme .modal-title {
  color: var(--accent-color-dark);
}

.modal-description {
  margin-bottom: 1rem;
}

.close-button {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
  color: var(--text-color-light);
  z-index: 11;
}

.dark-theme .close-button {
  color: var(--text-color-dark);
}

.filter-dropdown-content a.active {
  background-color: var(--accent-color-light);
  color: white;
}

.dark-theme .filter-dropdown-content a.active {
  background-color: var(--accent-color-dark);
  color: white;
}

/* Add these new styles to your existing Projects.css file */

/* Update these styles in your Projects.css file */

.carousel-container {
  position: relative;
  width: 100%;
  height: 550px; /* Increased height to accommodate the lift effect */
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 1000px; /* Add perspective for 3D transforms */
}

.carousel-track {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transform-style: preserve-3d;
}

.carousel-card {
  position: absolute;
  width: 300px;
  transition: all 0.5s ease;
}

.carousel-card.position-0 {
  transform: translateX(0) translateY(-20px); /* Lift the active card up */
  z-index: 3;
  opacity: 1;
  scale: 1.05; /* Slightly larger */
  box-shadow: 0 12px 32px 0 rgba(31, 38, 135, 0.37); /* Enhanced shadow */
}

.carousel-card.position-1 {
  transform: translateX(calc(100% + 2rem)) translateY(0) rotateY(-10deg); /* Rotate inward */
  transform-origin: left center;
  z-index: 2;
  opacity: 0.5; /* More fade */
}

.carousel-card.position--1 {
  transform: translateX(calc(-100% - 2rem)) translateY(0) rotateY(10deg); /* Rotate inward */
  transform-origin: right center;
  z-index: 2;
  opacity: 0.5; /* More fade */
}

.carousel-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: var(--accent-color-light);
  color: white;
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  cursor: pointer;
  z-index: 4;
  font-size: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  opacity: 0.8;
}

.dark-theme .carousel-button {
  background-color: var(--accent-color-dark);
}

.carousel-button:hover {
  background-color: var(--orbit-color-hover-light);
  transform: translateY(-50%) scale(1.1);
}

.dark-theme .carousel-button:hover {
  background-color: var(--orbit-color-hover-dark);
}

.carousel-button.prev {
  left: 1rem;
}

.carousel-button.next {
  right: 1rem;
}

/* Update project card styles */
.project-card {
  min-width: 300px;
  height: 200px;
  margin: 0;
  background: rgba(255, 255, 255, 0.25);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  padding: 1.3rem;
  display: flex;
  flex-direction: column;
  transition: all 0.5s ease;
}

.dark-theme .project-card {
  background: rgba(0, 0, 0, 0.25);
}

/* Remove the grid styles */
.projects-grid {
  display: none;
}

/* Enhanced hover effect for the active card */
.carousel-card.position-0:hover {
  transform: translateX(0) translateY(-25px); /* Lift slightly higher on hover */
  scale: 1.06;
}

/* Smooth transition for all transform properties */
.carousel-card {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Add these new styles to your existing CSS */

.carousel-track {
  cursor: grab;
  user-select: none;
}

.carousel-track.dragging {
  cursor: grabbing;
}

/* Update the transition property to exclude transform when dragging */
.carousel-card {
  transition: opacity 0.5s ease, box-shadow 0.5s ease;
}

.carousel-card:not(.dragging) {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Prevent text selection during drag */
.carousel-track,
.project-card {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Optional: Add a subtle indicator that the carousel is draggable */
.carousel-track:hover {
  cursor: grab;
}

.carousel-track:active {
  cursor: grabbing;
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\Projects.jsx
File Name: Projects.jsx
Code:
import React, { useState, useEffect, useRef } from "react";
import ProjectModal from "./ProjectModal";
import "./Projects.css";
import projectsData from "./projectsData";
import githubLogoLight from "../assets/github-mark.png";
import githubLogoDark from "../assets/github-mark-white.png";

const Projects = ({ isDarkMode }) => {
  const [selectedProject, setSelectedProject] = useState(null);
  const [activeFilter, setActiveFilter] = useState("all");
  const [activeIndex, setActiveIndex] = useState(0);
  const [isTransitioning, setIsTransitioning] = useState(false);
  
  // Drag functionality states
  const [isDragging, setIsDragging] = useState(false);
  const [startX, setStartX] = useState(0);
  const [dragX, setDragX] = useState(0);
  const trackRef = useRef(null);

  const openModal = (project) => {
    // Only open modal if we haven't dragged
    if (!isDragging) {
      setSelectedProject(project);
    }
  };

  const closeModal = () => {
    setSelectedProject(null);
  };

  const handleFilterClick = (filter) => {
    setActiveFilter(filter);
    setActiveIndex(0);
  };

  const filteredProjects =
    activeFilter === "all"
      ? projectsData
      : projectsData.filter((project) => project.filter.includes(activeFilter));

  const githubLogo = isDarkMode ? githubLogoDark : githubLogoLight;

  const nextSlide = () => {
    if (!isTransitioning) {
      setIsTransitioning(true);
      setActiveIndex((current) => (current + 1) % filteredProjects.length);
      setTimeout(() => setIsTransitioning(false), 500);
    }
  };

  const prevSlide = () => {
    if (!isTransitioning) {
      setIsTransitioning(true);
      setActiveIndex((current) =>
        current === 0 ? filteredProjects.length - 1 : current - 1
      );
      setTimeout(() => setIsTransitioning(false), 500);
    }
  };

  // Mouse drag handlers
  const handleMouseDown = (e) => {
    setIsDragging(true);
    setStartX(e.pageX - dragX);
    if (trackRef.current) {
      trackRef.current.style.cursor = 'grabbing';
    }
  };

  const handleMouseMove = (e) => {
    if (!isDragging) return;
    
    const currentX = e.pageX - startX;
    setDragX(currentX);

    // Determine if we should change slides based on drag distance
    if (Math.abs(currentX) > 100) {
      if (currentX > 0) {
        prevSlide();
      } else {
        nextSlide();
      }
      // Reset drag state
      setIsDragging(false);
      setDragX(0);
    }
  };

  const handleMouseUp = () => {
    setIsDragging(false);
    setDragX(0);
    if (trackRef.current) {
      trackRef.current.style.cursor = 'grab';
    }
  };

  // Clean up mouse events
  useEffect(() => {
    const cleanup = () => {
      setIsDragging(false);
      setDragX(0);
    };

    document.addEventListener('mouseup', cleanup);
    return () => {
      document.removeEventListener('mouseup', cleanup);
    };
  }, []);

  const getVisibleCards = () => {
    const cards = [];
    for (let i = -1; i <= 1; i++) {
      let index = activeIndex + i;
      if (index < 0) index = filteredProjects.length - 1;
      if (index >= filteredProjects.length) index = 0;
      cards.push({
        project: filteredProjects[index],
        position: i
      });
    }
    return cards;
  };

  return (
    <section id="projects" className="projects-section">
      <h2 className="section-title">Projects</h2>
      <div className="filter-container">
        <div className="filter-dropdown">
          <button id="filterBtn" className="filter-btn">
            <span>Filter by Technology</span>
            <svg
              className="filter-icon"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 6h18M6 12h12m-9 6h6"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
              />
            </svg>
          </button>
          <div id="filterDropdown" className="filter-dropdown-content">
            <a
              href="#projects"
              data-filter="all"
              className={activeFilter === "all" ? "active" : ""}
              onClick={() => handleFilterClick("all")}
            >
              All
            </a>
            <a
              href="#projects"
              data-filter="python"
              className={activeFilter === "python" ? "active" : ""}
              onClick={() => handleFilterClick("python")}
            >
              Python
            </a>
            <a
              href="#projects"
              data-filter="tabi"
              className={activeFilter === "tabi" ? "active" : ""}
              onClick={() => handleFilterClick("tabi")}
            >
              Power BI/Tableau
            </a>
            <a
              href="#projects"
              data-filter="bases"
              className={activeFilter === "bases" ? "active" : ""}
              onClick={() => handleFilterClick("bases")}
            >
              MySQL/MariaDB
            </a>
            <a
              href="#projects"
              data-filter="django"
              className={activeFilter === "django" ? "active" : ""}
              onClick={() => handleFilterClick("django")}
            >
              Django
            </a>
            <a
              href="#projects"
              data-filter="react"
              className={activeFilter === "react" ? "active" : ""}
              onClick={() => handleFilterClick("react")}
            >
              React
            </a>
          </div>
        </div>
      </div>

      <div className="carousel-container">
        <button className="carousel-button prev" onClick={prevSlide}>
          &#8249;
        </button>
        <div 
          ref={trackRef}
          className={`carousel-track ${isDragging ? 'dragging' : ''}`}
          onMouseDown={handleMouseDown}
          onMouseMove={handleMouseMove}
          onMouseUp={handleMouseUp}
          onMouseLeave={handleMouseUp}
        >
          {getVisibleCards().map(({ project, position }) => (
            <div
              className={`project-card carousel-card position-${position}`}
              key={project.id}
              style={{
                transform: `
                  ${position === 0 
                    ? `translateX(${dragX}px) translateY(-20px)` 
                    : position === 1 
                    ? `translateX(calc(100% + 2rem + ${dragX}px)) translateY(0) rotateY(-10deg)` 
                    : `translateX(calc(-100% - 2rem + ${dragX}px)) translateY(0) rotateY(10deg)`
                  }
                `
              }}
            >
              {project.githubLink && (
                <a
                  href={project.githubLink}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="github-link"
                >
                  <img
                    src={githubLogo}
                    alt="GitHub Repo"
                    className="github-logo"
                  />
                </a>
              )}
              <h3 className="project-title">{project.title}</h3>
              <p className="project-short-description">
                {project.shortDescription}
              </p>
              <div className="project-technologies">
                {project.technologies.map((tech) => (
                  <span key={tech} className="tech">
                    {tech}
                  </span>
                ))}
              </div>
              <button className="view-button" onClick={() => openModal(project)}>
                View
              </button>
            </div>
          ))}
        </div>
        <button className="carousel-button next" onClick={nextSlide}>
          &#8250;
        </button>
      </div>

      {selectedProject && (
        <ProjectModal project={selectedProject} onClose={closeModal} />
      )}
    </section>
  );
};

export default Projects;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\projectsData.jsx
File Name: projectsData.jsx
Code:
// src/components/Projects/projectsData.js

const projectsData = [
    {
      id: 'k-line-data-analysis',
      title: 'K-line Data Analysis',
      shortDescription: 'Financial data analysis using Python',
      description:
        'This project focuses on analyzing financial K-line data using Python libraries like Pandas, NumPy, Matplotlib, and mplfinance. It involves data cleaning, statistical analysis, and visualization to derive meaningful insights from K-line charts (candlestick charts).',
      technologies: ['Python', 'Pandas', 'NumPy', 'Matplotlib', 'mplfinance'],
      githubLink: 'https://github.com/SosoPkhakadze/K-line-Data-Analysis',
      filter: ['python']
    },
    {
      id: 'search-products',
      title: 'Search Products',
      shortDescription: 'E-commerce product search application',
      description:
        'Developed a web application for searching products from an e-commerce platform. The project uses web scraping techniques (likely with libraries like BeautifulSoup) to extract product information and provide search functionality.',
      technologies: ['Python', 'Web Scraping', 'BeautifulSoup'],
      githubLink: 'https://github.com/SosoPkhakadze/Search_Products',
      filter: ['python', 'bases']
    },
    {
      id: 'weather-forecast',
      title: 'Weather Forecast',
      shortDescription: 'Location-based weather app with Django',
      description:
        'A Django-based weather forecast application that utilizes the OpenWeatherMap API to fetch and display current weather data based on user location or a specified city. It includes backend functionality to handle API requests and a frontend to present the weather information.',
      technologies: ['Django', 'Python', 'OpenWeatherMap API'],
      githubLink: 'https://github.com/SosoPkhakadze/Weather-forecast',
      filter: ['django', 'python']
    },
    {
      id: 'job-aggregator',
      title: 'Job Aggregator Website',
      shortDescription: 'Full-stack job search platform',
      description:
        'Developed a full-stack web application utilizing Django for backend and React for frontend, enabling users to search for job listings based on title and location. Integrated with an external API to fetch real-time job data. Implemented features for displaying search results and viewing detailed job information.',
      technologies: ['React', 'Django', 'Python'],
      filter: ['react', 'django', 'python']
    },
    {
      id: 'image-resizing',
      title: 'Image Resizing & Interpolation',
      shortDescription: 'Algorithmic image manipulation',
      description:
        'Built an image resizing application from scratch using bilinear and bicubic interpolation techniques without relying on built-in libraries. This project demonstrates fundamentals of image processing and displays results through Matplotlib for visualization.',
      technologies: ['Python', 'Matplotlib'],
      filter: ['python']
    },
    {
      id: 'price-comparison',
      title: 'Price Comparison',
      shortDescription: 'Real-time price tracking web app',
      description:
        'Developed a price comparison web application using Django, integrating scraping scripts for major e-commerce websites like Amazon, eBay, Walmart, Target, Etsy, and Wayfair. Implemented sorting functionality to display search results from cheapest to most expensive.',
      technologies: ['Python', 'Django', 'BeautifulSoup'],
      filter: ['django', 'python', 'bases']
    },
    {
      id: 'sales-dashboard',
      title: 'Sales Dashboard',
      shortDescription: 'Data-driven sales insights with Power BI',
      description:
        'Developed an advanced sales dashboard using Power BI, leveraging data from SQL databases. Demonstrated expertise in data cleaning, exploratory data analysis, and predictive modeling to uncover actionable insights driving business decisions.',
      technologies: ['Power BI', 'SQL'],
      filter: ['tabi']
    },
    {
      id: 'data-analysis-dashboard',
      title: 'Data Analysis Dashboard',
      shortDescription: 'Restaurant performance analysis with Power BI',
      description:
        'Designed a comprehensive data analysis dashboard for a Pizza Restaurant using Power BI and MariaDB, delivering key performance indicators and actionable insights, facilitating strategic decision-making and business optimization.',
      technologies: ['Power BI', 'MariaDB'],
      filter: ['tabi', 'bases']
    },
    {
      id: 'covid-insight-analysis',
      title: 'COVID Insight Analysis Dashboard',
      shortDescription: 'Public health data exploration with Power BI',
      description:
        'Leveraged Power BI to analyze COVID-19 data, providing insights into virus spread, vaccination rates, and their impact on public health and the economy. Integrated diverse data sources, crafted interactive visualizations, enabling users to discern trends for informed decision-making.',
      technologies: ['Power BI'],
      filter: ['tabi']
    },
    {
      id: 'user-requirements-analysis',
      title: 'User Requirements Analysis Dashboard',
      shortDescription: 'Tableau dashboard for user insights',
      description:
        'Developed a comprehensive Tableau dashboard project by analyzing user requirements, creating mockups, and deciding on chart types. Built the data model, prepared the data source, and created various charts. Designed the layout container and constructed the dashboard to deliver insightful visualizations.',
      technologies: ['Tableau'],
      filter: ['tabi']
    },
  ];
  
  export default projectsData;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Skills\Skills.css
File Name: Skills.css
Code:
.skills-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .skills-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.skill-card {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.skill-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Skills\Skills.jsx
File Name: Skills.jsx
Code:
import React from 'react';
import './Skills.css';

const Skills = () => {
  return (
    <section id="skills" className="skills-section">
      <h2>Skills</h2>
      <div className="skills-grid">
        <div className="skill-card">
          <h3>Skill 1</h3>
          <p>Description of Skill 1.</p>
        </div>
        <div className="skill-card">
          <h3>Skill 2</h3>
          <p>Description of Skill 2.</p>
        </div>
      </div>
    </section>
  );
};

export default Skills;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Welcome\Welcome.css
File Name: Welcome.css
Code:
/* Welcome Section */
.welcome-section {
  position: relative;
  min-height: 100vh;
  overflow: hidden;
  background: var(--bg-color-light);
  display: flex;
  align-items: center;
  justify-content: center;
}
.dark-theme .welcome-section {
  background: var(--bg-color-dark);
}

/* Background Initials */
.bg-initials {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  background-image: url("/SP.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0.05;
  filter: blur(10px);
  pointer-events: none;
  z-index: -1;
  transition: transform 0.5s ease-in-out;
}

/* Intro Content */
.intro-content {
  position: relative;
  z-index: 3;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 3rem;
  justify-content: space-around;
}

/* Orbit System */
.orbit-system {
  position: relative;
  width: 350px;
  height: 350px;
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 1000px;
  transition: transform 0.5s ease;
}

.profile-orbit {
  position: absolute;
  border: 2px dashed var(--orbit-color-light);
  border-radius: 50%;
  transform-style: preserve-3d;
}
.dark-theme .profile-orbit {
  border-color: var(--orbit-color-dark);
}

.orbit-one {
  width: 100%;
  height: 100%;
  animation: orbit-one-anim 20s linear infinite;
}

.orbit-two {
  width: 85%;
  height: 85%;
  top: 7.5%;
  left: 7.5%;
  animation: orbit-two-anim 15s linear infinite;
}

.orbit-three {
  width: 70%;
  height: 70%;
  top: 15%;
  left: 15%;
  animation: orbit-three-anim 10s linear infinite;
}

/* Rotating Circles */
.orbit-circle {
  position: absolute;
  width: 15px;
  height: 15px;
  background-color: var(--accent-color-light);
  border-radius: 50%;
  box-shadow: 0 0 10px var(--accent-color-light);
  animation: orbit-circle-anim 10s linear infinite;
}
.dark-theme .orbit-circle {
  background-color: var(--accent-color-dark);
  box-shadow: 0 0 10px var(--accent-color-dark);
}

.circle-one {
  top: 0;
  left: 50%;
  transform-origin: 50% 150px;
  animation-duration: 10s;
}

.circle-two {
  top: 50%;
  right: 0;
  transform-origin: -150px 50%;
  animation-duration: 15s;
}

.circle-three {
  bottom: 0;
  left: 50%;
  transform-origin: 50% -150px;
  animation-duration: 20s;
}

#orbit-glow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    var(--accent-color-light),
    transparent 60%
  );
  opacity: 0;
  pointer-events: none;
  animation: glow-pulse 3s infinite ease-in-out;
}
.dark-theme #orbit-glow {
  background: radial-gradient(
    circle at center,
    var(--accent-color-dark),
    transparent 60%
  );
}

.central-logo {
  width: 120px;
  height: 120px;
  position: relative;
  z-index: 4;
  animation: pulse 2s ease-in-out infinite;
  background-color: var(--accent-color-light);
  border-radius: 50%;
  padding: 10px;
  box-shadow: 0 0 15px var(--accent-color-light);
}
.dark-theme .central-logo {
  background-color: var(--accent-color-dark);
  box-shadow: 0 0 15px var(--accent-color-dark);
}

.profile-logo {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* Name and Tagline */
.name-title {
  animation: fadeInUp 1.5s ease-out forwards;
  color: var(--text-color-light);
  text-shadow: none;
  text-align: left;
  margin-right: 5rem;
}
.dark-theme .name-title {
  color: var(--text-color-dark);
}

.name {
  font-size: 3.5rem;
  margin: 0 0 10px 0;
  font-weight: 900;
  letter-spacing: 2px;
  background: linear-gradient(
    90deg,
    var(--accent-color-light),
    var(--orbit-color-hover-light)
  );
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  line-height: 1.2;
  animation: shimmer 3s infinite alternate;
}
.dark-theme .name {
  background: linear-gradient(
    90deg,
    var(--accent-color-dark),
    var(--orbit-color-hover-dark)
  );
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  /* Remove the text-shadow in dark mode */
  text-shadow: none; 
}

.tagline-wrapper {
  position: relative;
  margin-top: 0.5rem;
  padding: 0.3rem 0.6rem;
  overflow: hidden;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}
.dark-theme .tagline-wrapper {
  background: rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
}

.tagline {
    /* Font Improvements */
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--accent-color-light);
    text-shadow: 0 0 5px var(--accent-color-light);
    animation: fadeIn 1s ease-in-out forwards;
}

.dark-theme .tagline {
    color: var(--accent-color-dark);
    text-shadow: 0 0 5px var(--accent-color-dark);
}

/* Responsive Design */
@media (max-width: 768px) {
  .intro-content {
    flex-direction: column;
    align-items: center;
  }
  .name-title {
    text-align: center;
    margin: 0;
  }
  .name {
    font-size: 3rem;
  }
  .tagline {
    font-size: 1.4rem;
  }
  .orbit-system {
    width: 250px;
    height: 250px;
  }
  .central-logo {
    width: 80px;
    height: 80px;
  }
}

/* Animations */
@keyframes orbit-one-anim {
  0% {
    transform: rotateZ(0deg) rotateX(60deg) rotateY(-20deg) translateX(0) translateY(0);
  }
  50% {
    transform: rotateZ(180deg) rotateX(60deg) rotateY(-20deg) translateX(5px) translateY(5px);
  }
  100% {
    transform: rotateZ(360deg) rotateX(60deg) rotateY(-20deg) translateX(0) translateY(0);
  }
}

@keyframes orbit-two-anim {
  0% {
    transform: rotateZ(0deg) rotateX(45deg) rotateY(10deg) translateX(0) translateY(0);
  }
  50% {
    transform: rotateZ(-180deg) rotateX(45deg) rotateY(10deg) translateX(-5px) translateY(-5px);
  }
  100% {
    transform: rotateZ(-360deg) rotateX(45deg) rotateY(10deg) translateX(0) translateY(0);
  }
}

@keyframes orbit-three-anim {
  0% {
    transform: rotateZ(0deg) rotateX(15deg) rotateY(-45deg) translateX(0) translateY(0);
  }
  50% {
    transform: rotateZ(180deg) rotateX(15deg) rotateY(-45deg) translateX(5px) translateY(-5px);
  }
  100% {
    transform: rotateZ(360deg) rotateX(15deg) rotateY(-45deg) translateX(0) translateY(0);
  }
}

@keyframes orbit-circle-anim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes glow-pulse {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% {
    background-position: 0%;
  }
  100% {
    background-position: 200%;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Welcome\Welcome.jsx
File Name: Welcome.jsx
Code:
import React, { useEffect, useRef } from "react";
import "./Welcome.css";
import { ReactTyped } from "react-typed";

const Welcome = () => {
  const orbitSystemRef = useRef(null);
  const bgInitialsRef = useRef(null);

  useEffect(() => {
    const orbitSystem = orbitSystemRef.current;
    const bgInitials = bgInitialsRef.current;

    // Mouse Move Effect for Orbit System
    const handleMouseMove = (e) => {
      const rect = orbitSystem.getBoundingClientRect();
      const x = e.clientX - rect.left - rect.width / 2;
      const y = e.clientY - rect.top - rect.height / 2;
      orbitSystem.style.transform = `rotateX(${-y / 8}deg) rotateY(${x / 8}deg) rotateZ(0deg)`;
    };

    const handleMouseLeave = () => {
      orbitSystem.style.transform = "rotateX(0deg) rotateY(0deg) rotateZ(0deg)";
    };

    // Parallax Scroll Effect for Background Initials
    const handleScroll = () => {
      const scrollValue = window.scrollY;
      bgInitials.style.transform = `translateY(${scrollValue * 0.4}px) scale(1.1)`;
    };

    // Event Listeners
    orbitSystem.addEventListener("mousemove", handleMouseMove);
    orbitSystem.addEventListener("mouseleave", handleMouseLeave);
    window.addEventListener("scroll", handleScroll);

    return () => {
      orbitSystem.removeEventListener("mousemove", handleMouseMove);
      orbitSystem.removeEventListener("mouseleave", handleMouseLeave);
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  return (
    <section id="welcome" className="welcome-section">
      {/* Background Initials */}
      <div className="bg-initials" ref={bgInitialsRef}></div>

      {/* Intro Content */}
      <div className="intro-content">
        {/* Orbit System */}
        <div className="orbit-system" ref={orbitSystemRef}>
          {/* Orbits */}
          <div className="profile-orbit orbit-one"></div>
          <div className="profile-orbit orbit-two"></div>
          <div className="profile-orbit orbit-three"></div>

          {/* Central Logo */}
          <div className="central-logo">
            <img
              src={`${import.meta.env.BASE_URL}SP.png`}
              alt="Profile Logo"
              className="profile-logo"
            />
          </div>

          {/* Rotating Circles */}
          <div className="orbit-circle circle-one"></div>
          <div className="orbit-circle circle-two"></div>
          <div className="orbit-circle circle-three"></div>

          {/* Glow Effect */}
          <div id="orbit-glow"></div>
        </div>

        {/* Name and Tagline */}
        <div className="name-title">
          <h1 className="name">Soso Pkhakadze</h1>
          <div className="tagline-wrapper">
            <ReactTyped
              strings={[
                "Passionate Software Engineer",
                "Experienced Django Developer",
                "Enthusiastic Learner",
                "Creative Problem Solver",
              ]}
              typeSpeed={60}
              backSpeed={30}
              loop
              className="tagline"
            />
          </div>
        </div>
      </div>
    </section>
  );
};

export default Welcome;
--------------------
