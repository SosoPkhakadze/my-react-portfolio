File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\App.css
File Name: App.css
Code:
:root {
  --bg-color-light: #ffffff;
  --bg-color-dark: #1a1a1a;
  --text-color-light: #333333;
  --text-color-dark: #f5f5f5;
  --accent-color-light: #ff6b6b;
  --accent-color-dark: #ff4757;
  --orbit-color-light: #ff6b6b;
  --orbit-color-dark: #ff4757;
  --orbit-color-hover-light: #ff4757;
  --orbit-color-hover-dark: #ff6b6b;
}

.dark-theme {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

/* Global styles */
body {
  margin: 0;
  font-family: 'Arial', sans-serif;
  transition: background-color 0.3s, color 0.3s;
  overflow: hidden; /* Hide vertical scrollbar on the body */
}

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
  overflow-y: scroll; /* Enable scrolling but hide scrollbar */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

html::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

/* Section styles */
section {
  padding: 4rem 2rem;
}

/* Welcome section */
.welcome-section {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--bg-color-light);
}
.dark-theme .welcome-section {
  background-color: var(--bg-color-dark);
}

/* Experience section */
.experience-section {
  background-color: var(--bg-color-light);
}
.dark-theme .experience-section {
  background-color: var(--bg-color-dark);
}

/* Projects section */
.projects-section {
  background-color: var(--bg-color-light);
}
.dark-theme .projects-section {
  background-color: var(--bg-color-dark);
}

/* Skills section */
.skills-section {
  background-color: var(--bg-color-light);
}
.dark-theme .skills-section {
  background-color: var(--bg-color-dark);
}

/* Education section */
.education-section {
  background-color: var(--bg-color-light);
}
.dark-theme .education-section {
  background-color: var(--bg-color-dark);
}

/* Contact section */
.contact-section {
  background-color: var(--bg-color-light);
}
.dark-theme .contact-section {
  background-color: var(--bg-color-dark);
}

/* Particle container */
.particle-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
}

.particle {
  position: absolute;
  background-color: var(--accent-color-light);
  border-radius: 50%;
  animation: float infinite ease-in-out;
}

@keyframes float {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(var(--x-shift), var(--y-shift));
  }
  100% {
    transform: translate(0, 0);
  }
}

.cursor-trail {
  position: fixed;
  width: 10px;
  height: 10px;
  background-color: var(--accent-color-light);
  border-radius: 50%;
  pointer-events: none;
  z-index: 1000;
  transition: opacity 0.3s, transform 0.3s;
}

.dark-theme .cursor-trail {
  background-color: var(--accent-color-dark);
}

.dark-theme {
  /* Other dark theme styles... */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.dark-theme::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

/* App.css or a global stylesheet */
.dark-theme .bg-initials {
  filter: drop-shadow(0 0 2px white);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\App.jsx
File Name: App.jsx
Code:
import React, { useState, useEffect } from 'react';
import Header from './components/Header/Header';
import Welcome from './components/Welcome/Welcome';
import Experience from './components/Experience/Experience';
import Projects from './components/Projects/Projects';
import Skills from './components/Skills/Skills';
import Education from './components/Education/Education';
import Contact from './components/Contact/Contact';
import './App.css';

function App() {
  const [isDarkMode, setIsDarkMode] = useState(false);

  useEffect(() => {
    const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
    setIsDarkMode(prefersDarkScheme.matches);
  }, []);

  const toggleTheme = () => {
    setIsDarkMode(!isDarkMode);
  };

  useEffect(() => {
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        document.querySelector(this.getAttribute('href')).scrollIntoView({
          behavior: 'smooth',
        });
      });
    });
  }, []);

  return (
    <div className={`App ${isDarkMode ? 'dark-theme' : ''}`}>
      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />
      <Welcome />
      <Experience />
      <Projects />
      <Skills />
      <Education />
      <Contact />
    </div>
  );
}

export default App;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\main.jsx
File Name: main.jsx
Code:
import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';


const root = createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
      <App />
  </React.StrictMode>
);
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Contact\Contact.css
File Name: Contact.css
Code:
.contact-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .contact-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 600px;
  margin: 2rem auto;
}

.contact-form input,
.contact-form textarea {
  padding: 0.8rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 5px;
  font-size: 1rem;
  transition: border-color 0.3s;
}

.contact-form input:focus,
.contact-form textarea:focus {
  border-color: var(--accent-color-light);
  outline: none;
}

.contact-form button {
  padding: 0.8rem;
  background-color: var(--accent-color-light);
  border: none;
  border-radius: 5px;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

.contact-form button:hover {
  background-color: var(--orbit-color-hover-light);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Contact\Contact.jsx
File Name: Contact.jsx
Code:
import React from 'react';
import './Contact.css';

const Contact = () => {
  return (
    <section id="contact" className="contact-section">
      <h2>Contact</h2>
      <form className="contact-form">
        <input type="text" placeholder="Your Name" required />
        <input type="email" placeholder="Your Email" required />
        <textarea placeholder="Your Message" required></textarea>
        <button type="submit">Send Message</button>
      </form>
    </section>
  );
};

export default Contact;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\CursorTrail\CursorTrail.css
File Name: CursorTrail.css
Code:
/* src/components/CursorTrail/CursorTrail.css */
.cursor-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9999;
  }
  
  .cursor-trail {
    position: fixed;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    pointer-events: none;
    transform-origin: center;
  }
  
  .cursor-particle {
    position: fixed;
    border-radius: 50%;
    pointer-events: none;
    transition: transform 0.6s ease-out, opacity 0.6s ease-out;
    z-index: 9999;
  }
  
  @media (max-width: 768px) {
    .cursor-container {
      display: none;
    }
  }
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\CursorTrail\CursorTrail.jsx
File Name: CursorTrail.jsx
Code:
// src/components/CursorTrail/CursorTrail.jsx
import { useEffect, useState } from 'react';
import { useTheme } from '../../context/ThemeContext';
import './CursorTrail.css';

const CursorTrail = () => {
  const { isDarkMode } = useTheme();
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const trailLength = 15;

  useEffect(() => {
    const handleMouseMove = (e) => {
      setMousePosition({ x: e.clientX, y: e.clientY });

      // Create splash particles
      createSplashParticles(e);
    };

    document.addEventListener('mousemove', handleMouseMove);
    return () => document.removeEventListener('mousemove', handleMouseMove);
  }, []);

  const createSplashParticles = (e) => {
    for (let i = 0; i < 5; i++) {
      const particle = document.createElement('div');
      particle.classList.add('cursor-particle');
      document.body.appendChild(particle);

      const size = Math.random() * 3 + 2;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.backgroundColor = isDarkMode ? 
        'var(--accent-color-dark)' : 
        'var(--accent-color-light)';

      const angle = Math.random() * Math.PI * 2;
      const speed = Math.random() * 15 + 5;
      const velocityX = Math.cos(angle) * speed;
      const velocityY = Math.sin(angle) * speed;

      particle.style.left = `${e.clientX}px`;
      particle.style.top = `${e.clientY}px`;

      requestAnimationFrame(() => {
        particle.style.transform = `translate(${velocityX}px, ${velocityY}px) scale(0)`;
        particle.style.opacity = '0';
      });

      setTimeout(() => particle.remove(), 600);
    }
  };

  return (
    <div className="cursor-container">
      {[...Array(trailLength)].map((_, index) => (
        <div
          key={index}
          className="cursor-trail"
          style={{
            left: `${mousePosition.x}px`,
            top: `${mousePosition.y}px`,
            opacity: (trailLength - index) / trailLength,
            transform: `scale(${(trailLength - index) / trailLength})`,
            transition: `all ${index * 0.015}s ease`,
            backgroundColor: isDarkMode ? 
              'var(--accent-color-dark)' : 
              'var(--accent-color-light)',
          }}
        />
      ))}
    </div>
  );
};

export default CursorTrail;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Education\Education.css
File Name: Education.css
Code:
.education-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .education-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.education-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.education-card {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.education-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Education\Education.jsx
File Name: Education.jsx
Code:
import React from 'react';
import './Education.css';

const Education = () => {
  return (
    <section id="education" className="education-section">
      <h2>Education</h2>
      <div className="education-grid">
        <div className="education-card">
          <h3>Degree 1</h3>
          <p>Description of Degree 1.</p>
        </div>
        <div className="education-card">
          <h3>Degree 2</h3>
          <p>Description of Degree 2.</p>
        </div>
      </div>
    </section>
  );
};

export default Education;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Experience\Experience.css
File Name: Experience.css
Code:
.experience-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .experience-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.experience-container {
  display: flex;
  gap: 2rem;
  margin-top: 2rem;
}

.company-logos {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.company-logo {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s, box-shadow 0.3s;
}

.company-logo img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.company-logo.active {
  transform: scale(1.1);
  box-shadow: 0 0 15px var(--accent-color-light);
}

.experience-info {
  flex: 1;
  padding: 1rem;
  border-radius: 8px;
  transition: background-color 0.3s;
}

.experience-item {
  display: none;
}

.experience-item.active {
  display: block;
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Experience\Experience.jsx
File Name: Experience.jsx
Code:
import React, { useEffect } from 'react';
import './Experience.css';

const Experience = () => {
  useEffect(() => {
    const companyLogos = document.querySelectorAll('.company-logo');
    const experienceItems = document.querySelectorAll('.experience-item');

    companyLogos.forEach(logo => {
      logo.addEventListener('click', () => {
        companyLogos.forEach(l => l.classList.remove('active'));
        experienceItems.forEach(item => item.classList.remove('active'));

        logo.classList.add('active');
        const companyId = logo.dataset.company;
        document.getElementById(`${companyId}-info`).classList.add('active');

        const colorThief = new ColorThief();
        const img = logo;

        if (img.complete) {
          const dominantColor = colorThief.getColor(img);
          updateExperienceContainerStyle(dominantColor);
        } else {
          img.addEventListener('load', function() {
            const dominantColor = colorThief.getColor(img);
            updateExperienceContainerStyle(dominantColor);
          });
        }
      });
    });

    const updateExperienceContainerStyle = (color) => {
      const experienceInfo = document.querySelector('.experience-info');
      experienceInfo.style.backgroundColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.15)`;

      const activeItem = document.querySelector('.experience-item.active');
      activeItem.style.borderLeft = `4px solid rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.8)`;
    };
  }, []);

  return (
    <section id="experience" className="experience-section">
      <h2>Experience</h2>
      <div className="experience-container">
        <div className="company-logos">
          <div className="company-logo active" data-company="company1">
            <img src="public/devsdata.png" alt="Company 1" />
          </div>
          <div className="company-logo" data-company="company2">
            <img src="public/netex.png" alt="Company 2" />
          </div>
        </div>
        <div className="experience-info">
          <div id="company1-info" className="experience-item active">
            <h3>Company 1</h3>
            <p>Details about your experience at Company 1.</p>
          </div>
          <div id="company2-info" className="experience-item">
            <h3>Company 2</h3>
            <p>Details about your experience at Company 2.</p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Experience;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Header\Header.css
File Name: Header.css
Code:
/* Header.css */

/* Base Header Styles */
.header {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 1000;
  padding: 1rem 2rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}
.dark-theme .header {
  background-color: rgba(26, 26, 26, 0.9);
}

.nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo-container {
  display: flex;
  align-items: center;
  z-index: 1001;
}

.logo {
  height: 40px;
  margin-right: 1rem;
}

.nav-list {
  list-style: none;
  display: flex;
  margin: 0;
  padding: 0;
}

.nav-list li {
  position: relative;
  margin: 0 2rem;
}

.nav-list li a {
  text-decoration: none;
  position: relative;
  display: block;
  overflow: hidden;
  font-weight: 600;
  padding: 0.5rem 1rem;
  color: var(--text-color-light);
  transition: all 0.3s ease-in-out;
  border-radius: 5px;
}
.dark-theme .nav-list li a {
  color: var(--text-color-dark);
}

/* Hover Effect */
.nav-list li a::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    rgba(255, 255, 255, 0.8),
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transform: skewX(-25deg);
  transition: left 0.5s ease;
  z-index: -1;
}
.nav-list li a:hover::before {
  left: 100%;
}

.nav-list li a:hover {
  transform: scale(1.1); /* Slightly enlarge the link */
  color: var(--accent-color-light); /* Change text color on hover */
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5); /* Add a subtle glow */
}
.dark-theme .nav-list li a:hover {
  color: var(--accent-color-dark);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); /* Adjust glow for dark theme */
}

/* Active State Styles */
.nav-list li.active a {
  color: var(--accent-color-light);
  border: none;
}
.dark-theme .nav-list li.active a {
  color: var(--accent-color-dark);
}

/* Hamburger Menu */
#hamburger-btn {
  display: none;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  z-index: 1001;
}

.bar {
  display: block;
  width: 25px;
  height: 3px;
  margin: 5px auto;
  background-color: var(--text-color-light);
  transition: 0.3s;
}
.dark-theme .bar {
  background-color: var(--text-color-dark);
}

#hamburger-btn.active .bar:nth-child(2) {
  opacity: 0;
}

#hamburger-btn.active .bar:nth-child(1) {
  transform: translateY(8px) rotate(45deg);
}

#hamburger-btn.active .bar:nth-child(3) {
  transform: translateY(-8px) rotate(-45deg);
}

/* Enhanced Theme Toggle Button */
#theme-toggle {
  position: relative;
  width: 50px;
  height: 25px;
  background: var(--bg-color-light);
  border: 2px solid var(--accent-color-light);
  border-radius: 25px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 5px;
  transition: background 0.3s ease, border 0.3s ease;
}
.dark-theme #theme-toggle {
  background: var(--bg-color-dark);
  border-color: var(--accent-color-dark);
}

#theme-toggle::before {
  content: '☀️';
  font-size: 1.2rem;
  color: var(--text-color-light);
  transition: transform 0.3s ease, color 0.3s ease;
}
.dark-theme #theme-toggle::before {
  content: '🌙';
  color: var(--text-color-dark);
}

#theme-toggle::after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  background: var(--accent-color-light);
  border-radius: 50%;
  left: 3px;
  transition: transform 0.3s ease, background 0.3s ease;
}
.dark-theme #theme-toggle::after {
  background: var(--accent-color-dark);
  transform: translateX(25px);
}

#theme-toggle:hover {
  border-color: var(--orbit-color-hover-light);
}
.dark-theme #theme-toggle:hover {
  border-color: var(--orbit-color-hover-dark);
}

/* Media Query for Mobile Responsiveness */
@media (max-width: 768px) {
  .nav {
    justify-content: space-between;
  }

  #hamburger-btn {
    display: block;
  }

  .nav-list {
    display: none;
    flex-direction: column;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
    z-index: 1000;
    gap: 2rem;
  }

  .dark-theme .nav-list {
    background-color: rgba(26, 26, 26, 0.95);
  }

  .nav-list.active {
    display: flex;
  }

  .nav-list li {
    width: 100%;
  }

  .nav-list a {
    padding: 1rem;
    text-align: center;
    display: block;
  }
}

/* Custom Variable Light Theme Colors */
:root {
  --bg-color-light: #ffffff; /* Background color for light theme */
  --text-color-light: #333333; /* Text color for light theme */
  --accent-color-light: #6a1b9a; /* Accent color for light theme */
  --orbit-color-light: #c88fd7; /* Color of the rotating rings - light */
  --orbit-color-hover-light: #9000ff; /* Color of the rotating rings on hover - light */
}

/* Custom Variable Dark Theme Colors */
.dark-theme {
  --bg-color-dark: #121212; /* Background color for dark theme */
  --text-color-dark: #eeeeee; /* Text color for dark theme */
  --accent-color-dark: #b964f9; /* Accent color for dark theme */
  --orbit-color-dark: #804ab9; /* Color of the rotating rings - dark */
  --orbit-color-hover-dark: #6d2df6; /* Color of the rotating rings on hover - dark */
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Header\Header.jsx
File Name: Header.jsx
Code:
import React, { useState, useEffect, useRef } from 'react';
import './Header.css';

const Header = ({ isDarkMode, toggleTheme }) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [activeSection, setActiveSection] = useState('home');
  const headerRef = useRef(null);

  // Toggle mobile menu
  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  // Handle scroll to detect active section
  useEffect(() => {
    const handleScroll = () => {
      const sections = ['home', 'experience', 'projects', 'skills', 'education', 'contact'];
      const currentSection = sections.find(section => {
        const element = document.getElementById(section);
        if (element) {
          const rect = element.getBoundingClientRect();
          return rect.top <= window.innerHeight / 2 && rect.bottom >= window.innerHeight / 2;
        }
        return false;
      });
      setActiveSection(currentSection || 'home');
    };

    // Intersection Observer for smooth active link updates
    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          const link = headerRef.current.querySelector(`a[href="#${entry.target.id}"]`);
          if (link) {
            if (entry.isIntersecting) {
              // Remove active class from all links
              headerRef.current.querySelectorAll('.nav-list li').forEach(li => li.classList.remove('active'));
              // Add active class to the current link
              link.closest('li').classList.add('active');
            }
          }
        });
      },
      {
        threshold: 0.5,
      }
    );

    const sections = document.querySelectorAll('section');
    sections.forEach(section => observer.observe(section));

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
      sections.forEach(section => observer.unobserve(section));
    };
  }, []);

  return (
    <header className={`header ${isDarkMode ? 'dark-theme' : ''}`} ref={headerRef}>
      <div className="nav">
        {/* Logo Container */}
        <div className="logo-container">
          <img src="/logo.png" alt="Logo" className="logo" />
        </div>

        {/* Navigation List */}
        <nav>
          <button id="hamburger-btn" onClick={toggleMenu} className={isMenuOpen ? 'active' : ''}>
            <span className="bar"></span>
            <span className="bar"></span>
            <span className="bar"></span>
          </button>
          <ul className={`nav-list ${isMenuOpen ? 'active' : ''}`}>
            {['Home', 'Experience', 'Projects', 'Skills', 'Education', 'Contact'].map(item => {
              const sectionId = item.toLowerCase() === 'home' ? 'welcome' : item.toLowerCase();
              return (
                <li key={item} className={activeSection === sectionId ? 'active' : ''}>
                  <a href={`#${sectionId}`}>{item}</a>
                </li>
              );
            })}
          </ul>
        </nav>

        {/* Theme Toggle Button */}
        <button id="theme-toggle" onClick={toggleTheme} className={isDarkMode ? 'dark-mode' : ''}>
          <span className="theme-toggle-icon">{isDarkMode ? '☀️' : '🌙'}</span>
        </button>
      </div>
    </header>
  );
};

export default Header;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\Projects.css
File Name: Projects.css
Code:
.projects-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .projects-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.project-card {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Projects\Projects.jsx
File Name: Projects.jsx
Code:
import React from 'react';
import './Projects.css';

const Projects = () => {
  return (
    <section id="projects" className="projects-section">
      <h2>Projects</h2>
      <div className="projects-grid">
        <div className="project-card">
          <h3>Project 1</h3>
          <p>Description of Project 1.</p>
        </div>
        <div className="project-card">
          <h3>Project 2</h3>
          <p>Description of Project 2.</p>
        </div>
      </div>
    </section>
  );
};

export default Projects;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Skills\Skills.css
File Name: Skills.css
Code:
.skills-section {
  padding: 4rem 2rem;
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}

.dark-theme .skills-section {
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}

.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.skill-card {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.skill-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Skills\Skills.jsx
File Name: Skills.jsx
Code:
import React from 'react';
import './Skills.css';

const Skills = () => {
  return (
    <section id="skills" className="skills-section">
      <h2>Skills</h2>
      <div className="skills-grid">
        <div className="skill-card">
          <h3>Skill 1</h3>
          <p>Description of Skill 1.</p>
        </div>
        <div className="skill-card">
          <h3>Skill 2</h3>
          <p>Description of Skill 2.</p>
        </div>
      </div>
    </section>
  );
};

export default Skills;
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Welcome\Welcome.css
File Name: Welcome.css
Code:
.welcome-section {
  position: relative;
  min-height: 100vh;
  overflow: hidden;
  background: var(--bg-color-light);
  display: flex;
  align-items: center;
  justify-content: center;
}

.dark-theme .welcome-section {
  background: var(--bg-color-dark);
}

.bg-initials {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  background-image: url("/SP.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0.05;
  filter: blur(10px);
  pointer-events: none;
  z-index: -1;
}

.intro-content {
  position: relative;
  z-index: 3;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 3rem;
  justify-content: space-around;
}

.orbit-system {
  position: relative;
  width: 350px;
  height: 350px;
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 1000px;
  transition: transform 0.5s ease;
}

.orbit-system:hover .profile-orbit {
  animation-play-state: running;
}

.orbit-system:active {
  cursor: default;
}

.profile-orbit {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px dashed var(--orbit-color-light);
  border-radius: 50%;
  animation: orbit 20s linear infinite;
  transform-style: preserve-3d;
}

.dark-theme .profile-orbit {
  border-color: var(--orbit-color-dark);
}

.profile-orbit:nth-child(2) {
  animation-duration: 15s;
  width: 85%;
  height: 85%;
  top: 7.5%;
  left: 7.5%;
}

.profile-orbit:nth-child(3) {
  animation-duration: 10s;
  width: 70%;
  height: 70%;
  top: 15%;
  left: 15%;
}

.orbit-glow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    var(--accent-color-light),
    transparent 60%
  );
  opacity: 0;
  pointer-events: none;
  animation: glow-pulse 3s infinite ease-in-out;
}

.dark-theme .orbit-glow {
  background: radial-gradient(
    circle at center,
    var(--accent-color-dark),
    transparent 60%
  );
}

.central-logo {
  width: 120px;
  height: 120px;
  position: relative;
  z-index: 4;
  animation: pulse 2s ease-in-out infinite;
  background-color: var(--accent-color-light);
  border-radius: 50%;
  padding: 10px;
  box-shadow: 0 0 15px var(--accent-color-light);
}

.dark-theme .central-logo {
  background-color: var(--accent-color-dark);
  box-shadow: 0 0 15px var(--accent-color-dark);
}

.profile-logo {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.name-title {
  animation: fadeInUp 1.5s ease-out forwards;
  color: var(--text-color-light);
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  text-align: left;
  margin-right: 5rem;
}

.dark-theme .name-title {
  color: var(--text-color-dark);
}

.name {
  font-size: 4rem;
  margin: 0;
  font-weight: 800;
  letter-spacing: 2px;
  background: linear-gradient(
    45deg,
    var(--accent-color-light),
    var(--orbit-color-hover-light)
  );
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.dark-theme .name {
  background: linear-gradient(
    45deg,
    var(--accent-color-dark),
    var(--orbit-color-hover-dark)
  );
}

.tagline-wrapper {
  position: relative;
  margin-top: 1rem;
  display: inline-block;
  padding: 0.5rem 0.5rem;
  overflow: hidden;
  background: rgba(var(--accent-color-light), 0.05);
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.dark-theme .tagline-wrapper {
  background: rgba(var(--accent-color-dark), 0.05);
}

.tagline {
  font-size: 1.8rem;
  margin: 0;
  color: var(--text-color-light);
  letter-spacing: 3px;
  font-weight: 600;
  text-shadow: 0 0 5px var(--accent-color-light);
  animation: glowPulse 3s infinite;
  background: linear-gradient(
    45deg,
    var(--text-color-light) 0%,
    var(--accent-color-light) 50%,
    var(--text-color-light) 100%
  );
  background-size: 200% auto;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: shine 3s linear infinite;
}

.tagline-decoration {
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--accent-color-light),
    transparent
  );
  animation: shimmer 2s infinite;
}

.tagline-wrapper::before,
.tagline-wrapper::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

.tagline-wrapper::before {
  background: radial-gradient(
    circle at 30% 107%,
    var(--accent-color-light) 0%,
    transparent 45%
  );
  opacity: 0.1;
  animation: rotate 5s linear infinite;
}

.tagline-wrapper::after {
  border: 1px solid var(--accent-color-light);
  opacity: 0.3;
  border-radius: 8px;
  transform: scale(1.05);
  animation: pulseScale 2s ease-in-out infinite;
}

.dark-theme .tagline {
  text-shadow: 0 0 5px var(--accent-color-dark);
  background: linear-gradient(
    45deg,
    var(--text-color-dark) 0%,
    var(--accent-color-dark) 50%,
    var(--text-color-dark) 100%
  );
  background-size: 200% auto;
  -webkit-background-clip: text;
  background-clip: text;
}

.dark-theme .tagline-decoration {
  background: linear-gradient(
    90deg,
    transparent,
    var(--accent-color-dark),
    transparent
  );
}

.dark-theme .tagline-wrapper::before {
  background: radial-gradient(
    circle at 30% 107%,
    var(--accent-color-dark) 0%,
    transparent 45%
  );
}

.dark-theme .tagline-wrapper::after {
  border-color: var(--accent-color-dark);
}

@keyframes shine {
  to {
    background-position: 200% center;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulseScale {
  0%,
  100% {
    transform: scale(1.05);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes glowPulse {
  0%,
  100% {
    filter: drop-shadow(0 0 2px var(--accent-color-light));
  }
  50% {
    filter: drop-shadow(0 0 8px var(--accent-color-light));
  }
}

@media (max-width: 768px) {
  .intro-content {
    flex-direction: column;
    align-items: center;
  }

  .name-title {
    text-align: center;
    margin: 0;
  }

  .name {
    font-size: 2.8rem;
  }

  .tagline {
    font-size: 1.4rem;
  }

  .orbit-system {
    width: 250px;
    height: 250px;
  }

  .central-logo {
    width: 80px;
    height: 80px;
  }
}
--------------------
File Path: C:\Users\admin\Desktop\portfolio\my-react-portfolio\src\components\Welcome\Welcome.jsx
File Name: Welcome.jsx
Code:
import React, { useEffect } from 'react';
import './Welcome.css';

const Welcome = () => {
  useEffect(() => {
    const orbitSystem = document.querySelector('.orbit-system');
    const bgInitials = document.querySelector('.bg-initials');

    const handleMouseMove = (e) => {
      const rect = orbitSystem.getBoundingClientRect();
      const x = e.clientX - rect.left - rect.width / 2;
      const y = e.clientY - rect.top - rect.height / 2;
      orbitSystem.style.transform = `rotateX(${-y / 10}deg) rotateY(${x / 10}deg)`;
    };

    const handleMouseLeave = () => {
      orbitSystem.style.transform = 'rotateX(0deg) rotateY(0deg)';
    };

    const handleScroll = () => {
      const scrollValue = window.scrollY;
      bgInitials.style.transform = `translateY(${scrollValue * 0.4}px) scale(1.1)`;
    };

    orbitSystem.addEventListener('mousemove', handleMouseMove);
    orbitSystem.addEventListener('mouseleave', handleMouseLeave);
    window.addEventListener('scroll', handleScroll);

    return () => {
      orbitSystem.removeEventListener('mousemove', handleMouseMove);
      orbitSystem.removeEventListener('mouseleave', handleMouseLeave);
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  return (
    <section id="welcome" className="welcome-section">
      <div className="bg-initials"></div>
      <div className="intro-content">
        <div className="orbit-system">
          <div className="profile-orbit"></div>
          <div className="profile-orbit"></div>
          <div className="profile-orbit"></div>
          <div className="orbit-glow"></div>
          <div className="central-logo">
            <img src="public\SP.png" alt="Profile Logo" className="profile-logo" />
          </div>
        </div>
        <div className="name-title">
          <h1 className="name">Your Name</h1>
          <div className="tagline-wrapper">
            <p className="tagline">Your Tagline</p>
            <span className="tagline-decoration"></span>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Welcome;
--------------------
